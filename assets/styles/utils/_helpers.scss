// Breakpoints
// ------------------------- //

@mixin bp($point, $type: width) {
    @if $type == "width" { @media (max-width: $point) { @content; }}
    @elseif $type == "height" { @media (max-height: $point) { @content; }}
}

// Layout
// ------------------------- //

// Clear floats
@mixin clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin container($width: $site-width) {
    @include clearfix;

    position: relative;
    width: 100%;
    max-width: $width;
    margin: {
        left: auto;
        right: auto;
    }

    @include bp($site-width-bg) {
        padding: 0 $gutter;
    }

    @include bp($xsmall) {
        padding: 0 $mobile-gutter;
    }
}

// Absolutely position element
@mixin position($top: null, $left: null, $bottom: null, $right: null, $fill: false) {
    position: absolute;
    top: $top;
    bottom: $bottom;
    right: $right;
    left: $left;

    @if $fill {
        width: 100%;
        height: 100%;
    }
}

// Reset Any Alignment
@mixin reset-align($transform: true) {
    position: relative;
    top: auto;
    bottom: auto;
    left: auto;
    right: auto;

    @if $transform {
        transform: none;
    }
}

// Shapes
// ------------------------- //

// Square
@mixin square($size, $corners: null) {
    display: block;
    height: $size;
    width: $size;
    border-radius: $corners;
    line-height: $size;
    text-align: center;
}

// Circle
@mixin circle($size) {
    @include square($size, $corners: 50%);
}

// Gradients
// ------------------------- //

// Simple horizontal gradient
@mixin gradient-h($from, $to, $start: 0%, $finish: 100%) {
    background: $from;
    background: linear-gradient(to right,  $from $start,$to $finish);
}

// Simple horizontal gradient
@mixin gradient-v($from, $to, $start: 0%, $finish: 100%) {
    background: $from;
    background: linear-gradient(to bottom, $from $start,$to $finish);
}

// Lists
@mixin plain-list {
    padding: 0;
    list-style: none;
}

// Icons
// ------------------------- //

@mixin icon($icon: null, $position: before, $padding: 0, $color: null, $set: null) {
    &:#{$position} {
        content: $icon;
        display: inline-block;
        color: $color;
        font: {
            style: normal;
            weight: normal;
        }
        line-height: 1;
        text-decoration: inherit;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;

        @if $padding not 0 {
            @if $position == "before" {
                padding-right: $padding;
            } @elseif $position == "after" {
                padding-left: $padding;
            }
        }
    }
}

// Hamburger Menu
// ------------------------- //

@mixin hamburger($width: 20px, $offset: 4px, $bar-height: 2px, $color: null, $border-radius: null) {

    position: relative;
    width: $width;
    height: ($offset * 2) + ($bar-height * 3);
    cursor: pointer;

    .bar {
        position: absolute;
        display: block;
        height: $bar-height;
        width: 100%;
        background: $color;
        border-radius: $border-radius;

        &:nth-of-type(1) { top: 0; }
        &:nth-of-type(2) { top: $offset + $bar-height; }
        &:nth-of-type(3) { top: ($offset * 2) + ($bar-height * 2); }
    }
}